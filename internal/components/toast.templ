package components

const (
	ToastInfo    = "info"
	ToastSuccess = "success"
	ToastWarning = "warning"
	ToastError   = "error"
)

type ToastProps struct {
	Message string
	Type    string
}

var attrs = templ.Attributes{
	"x-data":                      "{}",
	"x-init":                      "setTimeout(() => $refs.toast.remove(), 3000)",
	"x-transition.duration.300ms": "",
	"x-ref":                       "toast",
}

templ Toast(props ToastProps) {
	<div id="toasts" class="toast toast-end" hx-swap-oob="afterbegin">
		if props.Type == ToastInfo {
			<div role="alert" class="alert alert-info" { attrs... }>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
				<span>{ props.Message }</span>
			</div>
		} else if props.Type == ToastSuccess {
			<div role="alert" class="alert alert-success" { attrs... }>
				<svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
				<span>{ props.Message }</span>
			</div>
		} else if props.Type == ToastWarning {
			<div role="alert" class="alert alert-warning" { attrs... }>
				<svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>
				<span>{ props.Message }</span>
			</div>
		} else if props.Type == ToastError {
			<div role="alert" class="alert alert-error" { attrs... }>
				<svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
				<span>{ props.Message }</span>
			</div>
		} else {
			<div role="alert" class="alert" { attrs... }>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
				<span>{ props.Message }</span>
			</div>
		}
	</div>
}
